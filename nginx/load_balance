#nginx 负载均衡 算法

* 负载均衡算法分为: 内置策略 和 扩展策略

内置策略: 加权轮询 和 ip hash
扩展策略: fair / hash / consistent hash 等

加权轮询（weighted round robin）
源码位置: src/http/ngx_http_upstream_round_robin.[c|h]

分析:

1、请求过来分配给权重高的服务器-建立连接后权重-1
2、当所有机器down了，标志位清除成初始值

*当服务器数量小于32则只需要一个int即可记录所有服务器状态，超过后，则需要在内存池中申请内存来存储*

ip hash:
从代码中可以看出，hash值既与ip有关又与后端机器的数量有关。经过测试，上述算法可以连续产生1045个互异的value，
这是该算法的硬限制。对此nginx使用了保护机制，当经过20次hash仍然找不到可用的机器时，算法退化成轮询。
因此，从本质上说，ip hash算法是一种变相的轮询算法，如果两个ip的初始hash值恰好相同，
那么来自这两个ip的请求将永远落在同一台服务器上，这为均衡性埋下了很深的隐患
